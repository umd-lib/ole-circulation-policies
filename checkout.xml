<agendas>
  <agenda>
    <name>CheckOut Validation</name>
    <rules>

    
      <rule> <!--CheckOut Status Validation: if itemStatus=loaned, then display error, Else (if it's onhold for someone else, then display error)-->
        <name>CheckOut Status Validation</name>
        <oleProposition> <!--if itemStatus=Loaned-->
          <type>simple</type>
          <simpleProposition>
            <term>
              <type>java.lang.String</type>
              <value>itemStatus</value>
            </term>
            <operator>=</operator>
            <values>
              <value>
                <type>java.lang.String</type>
                <name>LOANED</name>
              </value>
            </values>
          </simpleProposition>
        </oleProposition>
        <falseActions>
          <rule> <!--Pending Request And Hold Status Validation: if patron != 1st position and requestType in (any hold or delivery type) then display error patron not in queue position "1" and if the itemstatus=OnHold, then display error 'onhold for someone else'-->
            <name>Pending Request And Hold Status Validation</name>
            <oleProposition> <!--if isPatronInPositionOne=false-->
              <type>simple</type>
              <simpleProposition> <!--if isPatronInPositionOne=false-->
                <term>
                  <type>java.lang.String</type>
                  <value>isPatronInPositionOne</value>
                </term>
                <operator>=</operator>
                <values>
                  <value>
                    <type>java.lang.String</type>
                    <name>false</name>
                  </value>
                </values>
              </simpleProposition>
            </oleProposition>
            <trueActions> <!--then display error patron not in queue position "1"-->
              <rule> <!--Pending Request Validation: if patron != 1st position and requestType in (any hold or delivery type), then display error patron not in queue position "1"-->
                <name>Pending Request Validation</name>
                <oleProposition> <!--if isPatronInPositionOne=false AND requestType in (recall hold or delivery or page hold or delivery or hold/hold)-->
                  <type>simple</type>
                  <simpleProposition> <!--if requestType in recall/hold, recall/delivery, page/hold, page/delivery, hold/hold-->
                    <term>
                      <type>java.lang.String</type>
                      <value>requestType</value>
                    </term>
                    <operator>IN</operator>
                    <values>
                      <value>
                        <type>java.lang.String</type>
                        <name>Recall/Delivery Request</name>
                      </value>
                      <value>
                        <type>java.lang.String</type>
                        <name>Recall/Hold Request</name>
                      </value>
                      <value>
                        <type>java.lang.String</type>
                        <name>Hold/Delivery Request</name>
                      </value>
                      <value>
                        <type>java.lang.String</type>
                        <name>Hold/Hold Request</name>
                      </value>
                      <value>
                        <type>java.lang.String</type>
                        <name>Page/Hold Request</name>
                      </value>
                      <value>
                        <type>java.lang.String</type>
                        <name>Page/Delivery Request</name>
                      </value>
                      <value>
                        <type>java.lang.String</type>
                        <name>Copy Request</name>
                      </value>
                      <value>
                        <type>java.lang.String</type>
                        <name>In Transit Request</name>
                      </value>
                    </values>
                  </simpleProposition>
                </oleProposition>
                <trueActions> <!--then display error patron not in queue position "1"-->
                  <action>
                    <name>errorsAndPermission</name>
                    <parameter>
                      <name>errorMessage</name>
                      <value>Item has pending request queue where patron presenting item is NOT the patron in queue position '1'</value>
                    </parameter>
                    <parameter>
                      <name>permissionName</name>
                      <value>Item has pending request queue where patron presenting item is NOT the patron in queue position '1'</value>
                    </parameter>
                  </action>
                  <rule> <!--OnHold Status Validation: if itemstatus=OnHold, then display error 'onhold for someone else'-->
                    <name>OnHold Status Validation</name>
                    <oleProposition> <!--if itemStatus=OnHold-->
                      <type>simple</type>
                      <simpleProposition> <!--if itemStatus=OnHold-->
                        <term>
                          <type>java.lang.String</type>
                          <value>itemStatus</value>
                        </term>
                        <operator>=</operator>
                        <values>
                          <value>
                            <type>java.lang.String</type>
                            <name>ONHOLD</name>
                          </value>
                        </values>
                      </simpleProposition>
                    </oleProposition>
                    <trueActions> <!--then display error onhold for another patron-->
                      <action>
                        <name>errorsAndPermission</name>
                        <parameter>
                          <name>errorMessage</name>
                          <value>Item has been requested by another patron.</value>
                        </parameter>
                        <parameter>
                          <name>permissionName</name>
                          <value>Item on hold for another patron</value>
                        </parameter>
                      </action>
                    </trueActions>
                  </rule>
                </trueActions>
              </rule>
            </trueActions>
          </rule>
        </falseActions>
      </rule>

      <!--[FACULTY OR STAFF], Item Type: 01 = fixedDueDate -->
      <rule>
        <name>CHECKOUT_FIXED_DUE_DATE_FAC_STAFF_01</name>
        <oleProposition>
          <type>compound</type>
          <compoundProposition>
            <operator>AND</operator>
            <simpleProposition> <!--if borrower in (FAC, STAFF)-->
              <term>
                <type>java.lang.String</type>
                <value>borrowerType</value>
              </term>
              <operator>IN</operator>
              <values>
                <value>
                  <type>java.lang.String</type>
                  <name>FAC</name>
                </value>
                <value>
                  <type>java.lang.String</type>
                  <name>STAFF</name>
                </value>
              </values>
            </simpleProposition>
            <simpleProposition> <!--If item in (01)-->
              <term>
                <type>java.lang.String</type>
                <value>itemType</value>
              </term>
              <operator>IN</operator>
              <values>
                <value>
                  <type>java.lang.String</type>
                  <name>01</name>
                </value>
              </values>
            </simpleProposition>
          </compoundProposition>
        </oleProposition>
        <trueActions>
          <action> <!--then policyfound = true-->
            <name>circulationPolicyFound</name>
            <parameter>
              <name>circulationPolicyFound</name>
              <value>true</value>
            </parameter>
          </action>
          <action> <!--then loanPeriod=fixedDueDate-->
            <name>loanPeriod</name>
            <parameter>
              <name>loanPeriod</name>
              <value>fixedDueDate</value>
            </parameter>
          </action>
        </trueActions>
      </rule>
      
      
      <!--[UGRAD], Item Type: 01 = 84 day loan period -->
      <rule>
        <name>CHECKOUT_UGRAD_01</name>
        <oleProposition>
          <type>compound</type>
          <compoundProposition>
            <operator>AND</operator>
            <simpleProposition> <!--if borrower in (UGRAD)-->
              <term>
                <type>java.lang.String</type>
                <value>borrowerType</value>
              </term>
              <operator>IN</operator>
              <values>
                <value>
                  <type>java.lang.String</type>
                  <name>UGRAD</name>
                </value>
              </values>
            </simpleProposition>
            <simpleProposition> <!--If item in (01)-->
              <term>
                <type>java.lang.String</type>
                <value>itemType</value>
              </term>
              <operator>IN</operator>
              <values>
                <value>
                  <type>java.lang.String</type>
                  <name>01</name>
                </value>
              </values>
            </simpleProposition>
          </compoundProposition>
        </oleProposition>
        <trueActions>
          <action> <!--then policyfound = true-->
            <name>circulationPolicyFound</name>
            <parameter>
              <name>circulationPolicyFound</name>
              <value>true</value>
            </parameter>
          </action>
          <action> <!--then loanPeriod=84 days-->
            <name>loanPeriod</name>
            <parameter>
              <name>loanPeriod</name>
              <value>84-D</value>
            </parameter>
          </action>
        </trueActions>
      </rule>
      
      
      <!--[GRAD], Item Type: 01 = fixedDueDate -->
      <rule>
        <name>CHECKOUT_FIXED_DUE_DATE_GRAD_01</name>
        <oleProposition>
          <type>compound</type>
          <compoundProposition>
            <operator>AND</operator>
            <simpleProposition> <!--if borrower in (GRAD)-->
              <term>
                <type>java.lang.String</type>
                <value>borrowerType</value>
              </term>
              <operator>IN</operator>
              <values>
                <value>
                  <type>java.lang.String</type>
                  <name>GRAD</name>
                </value>
              </values>
            </simpleProposition>
            <simpleProposition> <!--If item in (01)-->
              <term>
                <type>java.lang.String</type>
                <value>itemType</value>
              </term>
              <operator>IN</operator>
              <values>
                <value>
                  <type>java.lang.String</type>
                  <name>01</name>
                </value>
              </values>
            </simpleProposition>
          </compoundProposition>
        </oleProposition>
        <trueActions>
          <action> <!--then policyfound = true-->
            <name>circulationPolicyFound</name>
            <parameter>
              <name>circulationPolicyFound</name>
              <value>true</value>
            </parameter>
          </action>
          <action> <!--then loanPeriod=fixedDueDate-->
            <name>loanPeriod</name>
            <parameter>
              <name>loanPeriod</name>
              <value>fixedDueDate</value>
            </parameter>
          </action>
        </trueActions>
      </rule>

      
      <!-- Non-circulating items policy -->
      <rule> <!--Non-circulating item policy 1: Item Status 03 should not circulate -->
        <name>CHECKOUT_NONCIRC_03</name>
          <!-- (ITEM: 03) = Does not circulate --> 
          <oleProposition>
            <type>simple</type>
            <simpleProposition> <!--If item in (03)-->
              <term>
                <type>java.lang.String</type>
                <value>itemType</value>
              </term>
              <operator>IN</operator>
              <values>
                <value>
                  <type>java.lang.String</type>
                  <name>03</name>
                </value>
              </values>
            </simpleProposition>
          </oleProposition>
          <trueActions>
            <action> <!--then policyfound = true-->
              <name>circulationPolicyFound</name>
              <parameter>
                <name>circulationPolicyFound</name>
                <value>true</value>
              </parameter>
            </action>
            <action>
              <name>errorsAndPermission</name>
              <parameter>
                <name>errorMessage</name>
                <value>This item does not circulate.</value>
              </parameter>
              <parameter>
                <name>permissionName</name>
                <value>Item does not circulate</value>
              </parameter>
            </action>
          </trueActions>
      </rule>


      <!--[FACULTY OR STAFF], Item Type: 65 = NoLoan -->
      <rule>
        <name>CHECKOUT_FAC_STAFF_65</name>
        <oleProposition>
          <type>compound</type>
          <compoundProposition>
            <operator>AND</operator>
            <simpleProposition> <!--if borrower in (FAC, STAFF)-->
              <term>
                <type>java.lang.String</type>
                <value>borrowerType</value>
              </term>
              <operator>IN</operator>
              <values>
                <value>
                  <type>java.lang.String</type>
                  <name>FAC</name>
                </value>
                <value>
                  <type>java.lang.String</type>
                  <name>STAFF</name>
                </value>
              </values>
            </simpleProposition>
            <simpleProposition> <!--If item in (01)-->
              <term>
                <type>java.lang.String</type>
                <value>itemType</value>
              </term>
              <operator>IN</operator>
              <values>
                <value>
                  <type>java.lang.String</type>
                  <name>65</name>
                </value>
              </values>
            </simpleProposition>
          </compoundProposition>
        </oleProposition>
        <trueActions>
          <action> <!--then policyfound = true-->
            <name>circulationPolicyFound</name>
            <parameter>
              <name>circulationPolicyFound</name>
              <value>true</value>
            </parameter>
          </action>
          <action>
            <name>errorsAndPermission</name>
            <parameter>
              <name>errorMessage</name>
              <value>This patron type is not allowed to checkout items of this type.</value>
            </parameter>
            <parameter>
              <name>permissionName</name>
              <value>Patron type not allowed to borrow item type</value>
            </parameter>
          </action>
        </trueActions>
      </rule>
      

      <!--[UGRAD OR GRAD], Item Type: 65 = 8 hour loan period -->
      <rule>
        <name>CHECKOUT_UGRAD_GRAD_65</name>
        <oleProposition>
          <type>compound</type>
          <compoundProposition>
            <operator>AND</operator>
            <simpleProposition> <!--if borrower in (UGRAD, GRAD)-->
              <term>
                <type>java.lang.String</type>
                <value>borrowerType</value>
              </term>
              <operator>IN</operator>
              <values>
                <value>
                  <type>java.lang.String</type>
                  <name>UGRAD</name>
                </value>
                <value>
                  <type>java.lang.String</type>
                  <name>GRAD</name>
                </value>
              </values>
            </simpleProposition>
            <simpleProposition> <!--If item in (65)-->
              <term>
                <type>java.lang.String</type>
                <value>itemType</value>
              </term>
              <operator>IN</operator>
              <values>
                <value>
                  <type>java.lang.String</type>
                  <name>65</name>
                </value>
              </values>
            </simpleProposition>
          </compoundProposition>
        </oleProposition>
        <trueActions>
          <action> <!--then policyfound = true-->
            <name>circulationPolicyFound</name>
            <parameter>
              <name>circulationPolicyFound</name>
              <value>true</value>
            </parameter>
          </action>
          <action> <!--then loanPeriod=8 hours-->
            <name>loanPeriod</name>
            <parameter>
              <name>loanPeriod</name>
              <value>8-H</value>
            </parameter>
          </action>
        </trueActions>
      </rule>

      
      <!--if none of the above policies fit combination of item and patron, display the policy not found message-->
      <rule>
        <name>CHECKOUT_CIRC_POLICY_NOT_FOUND</name>
        <oleProposition>
          <type>simple</type>
          <simpleProposition>
            <function>circulationPolicyFoundFunction</function>
            <term>
              <type>java.lang.String</type>
              <value>patronId</value>
            </term>
            <term>
              <type>java.lang.String</type>
              <value>itemId</value>
            </term>
          </simpleProposition>
        </oleProposition>
        <trueActions>
          <action>
            <name>errorsAndPermission</name>
            <parameter>
              <name>errorMessage</name>
              <value>There is no circulation rule for this combination.&lt;br&gt;
                     Please notify CLAS with Patron barcode and Item barcode so this problem can be addressed.</value>
            </parameter>
            <parameter>
              <name>permissionName</name>
              <value>Circulation policy not found</value>
            </parameter>
          </action>
        </trueActions>
      </rule>
    </rules>
  </agenda>
</agendas>