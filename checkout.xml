<agendas>
  <agenda>
    <name>CheckOut Validation</name>
    <rules>
      <!--[FACULTY OR STAFF], Item Type: 01 = fixedDueDate -->
      <rule>
        <name>CHECKOUT_FIXED_DUE_DATE_FAC_STAFF_01</name>
        <oleProposition>
          <type>compound</type>
          <compoundProposition>
            <operator>AND</operator>
            <simpleProposition> <!--if borrower in (FAC, STAFF)-->
              <term>
                <type>java.lang.String</type>
                <value>borrowerType</value>
              </term>
              <operator>IN</operator>
              <values>
                <value>
                  <type>java.lang.String</type>
                  <name>FAC</name>
                </value>
                <value>
                  <type>java.lang.String</type>
                  <name>STAFF</name>
                </value>
              </values>
            </simpleProposition>
            <simpleProposition> <!--If item in (01)-->
              <term>
                <type>java.lang.String</type>
                <value>itemType</value>
              </term>
              <operator>IN</operator>
              <values>
                <value>
                  <type>java.lang.String</type>
                  <name>01</name>
                </value>
              </values>
            </simpleProposition>
          </compoundProposition>
        </oleProposition>
        <trueActions>
          <action> <!--then policyfound = true-->
            <name>circulationPolicyFound</name>
            <parameter>
              <name>circulationPolicyFound</name>
              <value>true</value>
            </parameter>
          </action>
          <action> <!--then loanPeriod=fixedDueDate-->
            <name>loanPeriod</name>
            <parameter>
              <name>loanPeriod</name>
              <value>fixedDueDate</value>
            </parameter>
          </action>
          <action> <!--then overdueDay=1 -->
            <name>overdueDay</name>
            <parameter>
              <name>overdueDay</name>
              <value>1</value>
            </parameter>
          </action>
          <action> <!--then recallOverdueDay=1-->
            <name>recallOverdueDay</name>
            <parameter>
              <name>recallOverdueDay</name>
              <value>1</value>
            </parameter>
          </action>
        </trueActions>
      </rule>
      
      
      <!--[UGRAD], Item Type: 01 = 56 day loan period -->
      <rule>
        <name>CHECKOUT_UGRAD_01</name>
        <oleProposition>
          <type>compound</type>
          <compoundProposition>
            <operator>AND</operator>
            <simpleProposition> <!--if borrower in (UGRAD)-->
              <term>
                <type>java.lang.String</type>
                <value>borrowerType</value>
              </term>
              <operator>IN</operator>
              <values>
                <value>
                  <type>java.lang.String</type>
                  <name>UGRAD</name>
                </value>
              </values>
            </simpleProposition>
            <simpleProposition> <!--If item in (01)-->
              <term>
                <type>java.lang.String</type>
                <value>itemType</value>
              </term>
              <operator>IN</operator>
              <values>
                <value>
                  <type>java.lang.String</type>
                  <name>01</name>
                </value>
              </values>
            </simpleProposition>
          </compoundProposition>
        </oleProposition>
        <trueActions>
          <action> <!--then policyfound = true-->
            <name>circulationPolicyFound</name>
            <parameter>
              <name>circulationPolicyFound</name>
              <value>true</value>
            </parameter>
          </action>
          <action> <!--then loanPeriod=56 days-->
            <name>loanPeriod</name>
            <parameter>
              <name>loanPeriod</name>
              <value>56-D</value>
            </parameter>
          </action>
          <action> <!--then overdueDay=1 -->
            <name>overdueDay</name>
            <parameter>
              <name>overdueDay</name>
              <value>1</value>
            </parameter>
          </action>
          <action> <!--then recallOverdueDay=1-->
            <name>recallOverdueDay</name>
            <parameter>
              <name>recallOverdueDay</name>
              <value>1</value>
            </parameter>
          </action>
        </trueActions>
      </rule>
      
      
      <!--[GRAD], Item Type: 01 = fixedDueDate -->
      <rule>
        <name>CHECKOUT_FIXED_DUE_DATE_GRAD_01</name>
        <oleProposition>
          <type>compound</type>
          <compoundProposition>
            <operator>AND</operator>
            <simpleProposition> <!--if borrower in (GRAD)-->
              <term>
                <type>java.lang.String</type>
                <value>borrowerType</value>
              </term>
              <operator>IN</operator>
              <values>
                <value>
                  <type>java.lang.String</type>
                  <name>GRAD</name>
                </value>
              </values>
            </simpleProposition>
            <simpleProposition> <!--If item in (01)-->
              <term>
                <type>java.lang.String</type>
                <value>itemType</value>
              </term>
              <operator>IN</operator>
              <values>
                <value>
                  <type>java.lang.String</type>
                  <name>01</name>
                </value>
              </values>
            </simpleProposition>
          </compoundProposition>
        </oleProposition>
        <trueActions>
          <action> <!--then policyfound = true-->
            <name>circulationPolicyFound</name>
            <parameter>
              <name>circulationPolicyFound</name>
              <value>true</value>
            </parameter>
          </action>
          <action> <!--then loanPeriod=56 days-->
            <name>loanPeriod</name>
            <parameter>
              <name>loanPeriod</name>
              <value>fixedDueDate</value>
            </parameter>
          </action>
          <action> <!--then overdueDay=1 -->
            <name>overdueDay</name>
            <parameter>
              <name>overdueDay</name>
              <value>1</value>
            </parameter>
          </action>
          <action> <!--then recallOverdueDay=1-->
            <name>recallOverdueDay</name>
            <parameter>
              <name>recallOverdueDay</name>
              <value>1</value>
            </parameter>
          </action>
        </trueActions>
      </rule>

      
      <!-- Non-circulating items policy -->
      <rule> <!--Non-circulating item policy 1: Item Status 03 should not circulate -->
        <name>CHECKOUT_NONCIRC_03</name>
          <!-- (ITEM: 03) = Does not circulate --> 
          <oleProposition>
            <type>simple</type>
            <simpleProposition> <!--If item in (03)-->
              <term>
                <type>java.lang.String</type>
                <value>itemType</value>
              </term>
              <operator>IN</operator>
              <values>
                <value>
                  <type>java.lang.String</type>
                  <name>03</name>
                </value>
              </values>
            </simpleProposition>
          </oleProposition>
          <trueActions>
            <action> <!--then policyfound = true-->
              <name>circulationPolicyFound</name>
              <parameter>
                <name>circulationPolicyFound</name>
                <value>true</value>
              </parameter>
            </action>
            <action>
              <name>errorsAndPermission</name>
              <parameter>
                <name>errorMessage</name>
                <value>This item does not circulate.</value>
              </parameter>
              <parameter>
                <name>permissionName</name>
                <value>Item does not circulate</value>
              </parameter>
            </action>
          </trueActions>
      </rule>


      <!--[FACULTY OR STAFF], Item Type: 65 = NoLoan -->
      <rule>
        <name>CHECKOUT_FAC_STAFF_65</name>
        <oleProposition>
          <type>compound</type>
          <compoundProposition>
            <operator>AND</operator>
            <simpleProposition> <!--if borrower in (FAC, STAFF)-->
              <term>
                <type>java.lang.String</type>
                <value>borrowerType</value>
              </term>
              <operator>IN</operator>
              <values>
                <value>
                  <type>java.lang.String</type>
                  <name>FAC</name>
                </value>
                <value>
                  <type>java.lang.String</type>
                  <name>STAFF</name>
                </value>
              </values>
            </simpleProposition>
            <simpleProposition> <!--If item in (01)-->
              <term>
                <type>java.lang.String</type>
                <value>itemType</value>
              </term>
              <operator>IN</operator>
              <values>
                <value>
                  <type>java.lang.String</type>
                  <name>65</name>
                </value>
              </values>
            </simpleProposition>
          </compoundProposition>
        </oleProposition>
        <trueActions>
          <action> <!--then policyfound = true-->
            <name>circulationPolicyFound</name>
            <parameter>
              <name>circulationPolicyFound</name>
              <value>true</value>
            </parameter>
          </action>
          <action>
            <name>errorsAndPermission</name>
            <parameter>
              <name>errorMessage</name>
              <value>This patron type is not allowed to checkout items of this type.</value>
            </parameter>
            <parameter>
              <name>permissionName</name>
              <value>Patron type not allowed to borrow item type</value>
            </parameter>
          </action>
        </trueActions>
      </rule>
      

      <!--[UGRAD OR GRAD], Item Type: 65 = 2 hour loan period -->
      <rule>
        <name>CHECKOUT_UGRAD_GRAD_65</name>
        <oleProposition>
          <type>compound</type>
          <compoundProposition>
            <operator>AND</operator>
            <simpleProposition> <!--if borrower in (UGRAD, GRAD)-->
              <term>
                <type>java.lang.String</type>
                <value>borrowerType</value>
              </term>
              <operator>IN</operator>
              <values>
                <value>
                  <type>java.lang.String</type>
                  <name>UGRAD</name>
                </value>
                <value>
                  <type>java.lang.String</type>
                  <name>GRAD</name>
                </value>
              </values>
            </simpleProposition>
            <simpleProposition> <!--If item in (65)-->
              <term>
                <type>java.lang.String</type>
                <value>itemType</value>
              </term>
              <operator>IN</operator>
              <values>
                <value>
                  <type>java.lang.String</type>
                  <name>65</name>
                </value>
              </values>
            </simpleProposition>
          </compoundProposition>
        </oleProposition>
        <trueActions>
          <action> <!--then policyfound = true-->
            <name>circulationPolicyFound</name>
            <parameter>
              <name>circulationPolicyFound</name>
              <value>true</value>
            </parameter>
          </action>
          <action> <!--then loanPeriod=56 days-->
            <name>loanPeriod</name>
            <parameter>
              <name>loanPeriod</name>
              <value>2-H</value>
            </parameter>
          </action>
          <action> <!--then overdueDay=1 -->
            <name>overdueDay</name>
            <parameter>
              <name>overdueDay</name>
              <value>1</value>
            </parameter>
          </action>
          <action> <!--then recallOverdueDay=1-->
            <name>recallOverdueDay</name>
            <parameter>
              <name>recallOverdueDay</name>
              <value>1</value>
            </parameter>
          </action>
        </trueActions>
      </rule>

      
      <!--if none of the above policies fit combination of item and patron, display the policy not found message-->
      <rule>
        <name>CHECKOUT_CIRC_POLICY_NOT_FOUND</name>
        <oleProposition>
          <type>simple</type>
          <simpleProposition>
            <function>circulationPolicyFoundFunction</function>
            <term>
              <type>java.lang.String</type>
              <value>patronId</value>
            </term>
            <term>
              <type>java.lang.String</type>
              <value>itemId</value>
            </term>
          </simpleProposition>
        </oleProposition>
        <trueActions>
          <action>
            <name>errorsAndPermission</name>
            <parameter>
              <name>errorMessage</name>
              <value>There is no circulation rule for this combination.&lt;br&gt;
                     Please notify CLAS with Patron barcode and Item barcode so this problem can be addressed.</value>
            </parameter>
            <parameter>
              <name>permissionName</name>
              <value>Circulation policy not found</value>
            </parameter>
          </action>
        </trueActions>
      </rule>
    </rules>
  </agenda>
</agendas>