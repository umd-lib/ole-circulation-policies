<agendas>
  <agenda> <!--Request Validation:  contains the policies for Requests-->
    <name>Request Validation</name>
    <rules>
      <rule> <!--RequestApproval; This rule checks whether request type id is Page/DeliveryRequest,Page/HoldRequest,CopyRequest-->
        <name>RequestApproval</name>
        <oleProposition> <!--if RequestType in Page/DeliveryRequest,Page/HoldRequest,CopyRequest, Notify PeopleFlow-->
          <type>simple</type>
          <simpleProposition>
            <term>
              <type>java.lang.String</type>
              <value>requestType</value>
            </term>
            <operator>IN</operator>
            <values>
              <value>
                <type>java.lang.String</type>
                <name>Page/Delivery Request</name>
              </value>
              <value>
                <type>java.lang.String</type>
                <name>Page/Hold Request</name>
              </value>
              <value>
                <type>java.lang.String</type>
                <name>Copy Request</name>
              </value>
            </values>
          </simpleProposition>
        </oleProposition>
        <trueActions> <!--RouteToPeopleFlow: the predefined peopleFlow is called RequestApproval-->
          <action>
            <name>Notify PeopleFlow</name>
            <parameter>
              <name>Notify PeopleFlow</name>
              <value>Request Approval</value>
            </parameter>
          </action>
        </trueActions>
      </rule>
      
      
      <rule> <!--RecallCheck; This rule checks whether request type is Recall/DeliveryRequest,Recall/HoldRequest-->
        <name>RecallCheck</name>
        <oleProposition> <!--if RequestType in Recall/DeliveryRequest,Recall/HoldRequest, generateNotice = RecallNotice-->
          <type>simple</type>
          <simpleProposition>
            <term>
              <type>java.lang.String</type>
              <value>requestType</value>
            </term>
            <operator>IN</operator>
            <values>
              <value>
                <type>java.lang.String</type>
                <name>Recall/Delivery Request</name>
              </value>
              <value>
                <type>java.lang.String</type>
                <name>Recall/Hold Request</name>
              </value>
            </values>
          </simpleProposition>
        </oleProposition>
        <trueActions>
          <action> <!--set generateNotice=RecallNotice-->
            <name>generateNotice</name>
            <parameter>
              <name>generateNotice</name>
              <value>RecallNotice</value>
            </parameter>
          </action>
        </trueActions>
      </rule>
      
      
      <rule> <!--ValidationRequestPolicySet1:-->
        <name>REQUEST_UGRAD_GRAD_FAC_STAFF_01</name>
        <oleProposition> <!--if borrowerType in (undergrad, grad, faculty, staff) AND itemtype in (01) -->
          <type>compound</type>
          <compoundProposition>
            <operator>AND</operator>
            <simpleProposition> <!--if borrowerType in (undergrad, grad, faculty, staff)-->
              <term>
                <type>java.lang.String</type>
                <value>borrowerType</value>
              </term>
              <operator>IN</operator>
              <values>
                <value>
                  <type>java.lang.String</type>
                  <name>UGRAD</name>
                </value>
                <value>
                  <type>java.lang.String</type>
                  <name>GRAD</name>
                </value>
                <value>
                  <type>java.lang.String</type>
                  <name>FAC</name>
                </value>
                <value>
                  <type>java.lang.String</type>
                  <name>STAFF</name>
                </value>
              </values>
            </simpleProposition>
            <simpleProposition> <!--if itemtype in (01)-->
              <term>
                <type>java.lang.String</type>
                <value>itemType</value>
              </term>
              <operator>IN</operator>
              <values>
                <value>
                  <type>java.lang.String</type>
                  <name>01</name>
                </value>
              </values>
            </simpleProposition>
          </compoundProposition>
        </oleProposition>
        <trueActions> <!--then circPolicyFound true AND set minimumLoanPeriod=14-D and recallLoanPeriod=14-D AND set requestExpirationDay=30-D -->
          <action> <!--then circPolicyFound true-->
            <name>circulationPolicyFound</name>
            <parameter>
              <name>circulationPolicyFound</name>
              <value>true</value>
            </parameter>
          </action>
          <action> <!--requestExpirationDay: requestExpirationDay=30-->
            <name>requestExpirationDay</name>
            <parameter>
              <name>requestExpirationDay</name>
              <value>30</value>
            </parameter>
          </action>
          <action> <!--then set minimumLoanPeriod=14-d and recallLoanPeriod=14-d-->
            <name>recallDueDate</name>
            <parameter>
              <name>minimumLoanPeriod</name>
              <value>14-D</value>
            </parameter>
            <parameter>
              <name>recallLoanPeriod</name>
              <value>14-D</value>
            </parameter>
          </action>
        </trueActions>
      </rule>

      
      <rule> <!--if isCircPolicyNotFound, display the message-->
        <name>Request Circulation Policy Not Found</name>
        <oleProposition>
          <type>simple</type>
          <simpleProposition>
            <function>circulationPolicyFoundFunction</function>
            <term>
              <type>java.lang.String</type>
              <value>patronId</value>
            </term>
            <term>
              <type>java.lang.String</type>
              <value>itemId</value>
            </term>
          </simpleProposition>
        </oleProposition>
        <trueActions>
          <action>
            <name>errorAction</name>
            <parameter>
              <name>errorMessage</name>
              <value>There is no circulation rule for this combination.</value>
            </parameter>
          </action>
        </trueActions>
      </rule>
    </rules>
  </agenda>
</agendas>