package org.kuali.ole.deliver.checkout

import org.kuali.ole.OLEConstants
import org.kuali.ole.deliver.util.NoticeInfo
import org.kuali.ole.deliver.bo.OleLoanDocument
import org.kuali.ole.deliver.bo.OlePatronDocument
import org.kuali.ole.deliver.util.OleItemRecordForCirc
import org.kuali.ole.deliver.drools.DroolsConstants
import org.kuali.ole.deliver.util.DroolsResponse 

/*
rule "Check out Circ Policy Set BOOK for Max Loaned Items less than 3"
agenda-group "checkout validation"
activation-group "checkout validation"
when
$l: OleLoanDocument()

$n: NoticeInfo()

$d : DroolsResponse()

$i: OleItemRecordForCirc(getItemType() in ("BOOK"),
getItemLibraryLocation() in ("LSC","B-EDUC","B-HPER","DLL","SCL","DOCS"),
getItemLocation() in ("PSK", "BED-STACKS","BED-TEACHMAT","BHP-JOURNALS","LawPer"))

$p: OlePatronDocument(getBorrowerTypeCode() in ("ALUM","AVR","FAC","FACR","GRAD","GUEST","RES,","STAFF","UGRAD"),
getLoanedItemsCountByItemType($i.getItemType()) < 3)

then
$l.setCirculationPolicyId("Check out Circ Policy Set BOOK");
$l.loanPeriod("10-D",null); // This method takes due date and recall period as arguments.
$n.setNoticeType(DroolsConstants.SHORT_TERM_LOANS_NOTICE_CONFIG);
 end
*/

/*
rule "Check out Circ Policy Set BOOK for Max Loaned Items Greater than 3"
agenda-group "checkout validation"
activation-group "checkout validation"
when
$l: OleLoanDocument()

$n: NoticeInfo()

$d : DroolsResponse()

$i: OleItemRecordForCirc(getItemType() in ("BOOK"),
getItemLibraryLocation() in ("LSC","B-EDUC","B-HPER","DLL","SCL","DOCS"),
getItemLocation() not in ("PSK", "BED-STACKS","BED-TEACHMAT","BHP-JOURNALS","LawPer"))

$p: OlePatronDocument(getBorrowerTypeCode() in ("ALUM","AVR","FAC","FACR","GRAD","GUEST","RES,","STAFF","UGRAD"),
getLoanedItemsCountByItemType($i.getItemType()) >= 3)

then
$d.addErrorMessage("Patron has more than 3 items of BOOK reserve loan items type checked out");
$d.addOverridePermissions(DroolsConstants.GENERAL_BLOCK_PERMISSION);
$l.setCirculationPolicyId("Check out Circ Policy Set BOOK");
$l.loanPeriod("10-D",null); // This method takes due date and recall period as arguments.
$n.setNoticeType(DroolsConstants.SHORT_TERM_LOANS_NOTICE_CONFIG);
 end
*/

rule "CHECKOUT_FIXED_DUE_DATE_FAC_STAFF_01"
agenda-group "checkout validation"
activation-group "checkout validation"
when
$l: OleLoanDocument()

$n: NoticeInfo()

$d : DroolsResponse()

$i: OleItemRecordForCirc(getItemType() in ("01"))
//getItemLibraryLocation() in ("LSC","B-EDUC","B-HPER","DLL","SCL","DOCS"),
//getItemLocation() not in ("PSK", "BED-STACKS","BED-TEACHMAT","BHP-JOURNALS","LawPer"))

$p: OlePatronDocument(getBorrowerTypeCode() in ("FAC", "STAFF"))

then
$l.setCirculationPolicyId("CHECKOUT_FIXED_DUE_DATE_FAC_STAFF_01");
$l.loanPeriod(OLEConstants.FIXED_DUE_DATE,null); // This method takes due date and recall period as arguments.
$n.setNoticeType(DroolsConstants.SHORT_TERM_LOANS_NOTICE_CONFIG);
 end
 
rule "CHECKOUT_FIXED_DUE_DATE_GRAD_01"
agenda-group "checkout validation"
activation-group "checkout validation"
when
$l: OleLoanDocument()

$n: NoticeInfo()

$d : DroolsResponse()

$i: OleItemRecordForCirc(getItemType() in ("01"))
//getItemLibraryLocation() in ("LSC","B-EDUC","B-HPER","DLL","SCL","DOCS"),
//getItemLocation() not in ("PSK", "BED-STACKS","BED-TEACHMAT","BHP-JOURNALS","LawPer"))

$p: OlePatronDocument(getBorrowerTypeCode() in ("GRAD"))

then
$l.setCirculationPolicyId("CHECKOUT_FIXED_DUE_DATE_GRAD_01");
$l.loanPeriod(OLEConstants.FIXED_DUE_DATE,null); // This method takes due date and recall period as arguments.
$n.setNoticeType(DroolsConstants.SHORT_TERM_LOANS_NOTICE_CONFIG);
 end


rule "CHECKOUT_UGRAD_01"
agenda-group "checkout validation"
activation-group "checkout validation"
when
$l: OleLoanDocument()

$n: NoticeInfo()

$d : DroolsResponse()

$i: OleItemRecordForCirc(getItemType() in ("01"))
//getItemLibraryLocation() in ("LSC","B-EDUC","B-HPER","DLL","SCL","DOCS"),
//getItemLocation() not in ("PSK", "BED-STACKS","BED-TEACHMAT","BHP-JOURNALS","LawPer"))

$p: OlePatronDocument(getBorrowerTypeCode() in ("UGRAD"))

then
$l.setCirculationPolicyId("CHECKOUT_UGRAD_01");
$l.loanPeriod("84-D",null); // This method takes due date and recall period as arguments.
$n.setNoticeType(DroolsConstants.SHORT_TERM_LOANS_NOTICE_CONFIG);
 end


rule "CHECKOUT_NONCIRC_03"
agenda-group "checkout validation"
activation-group "checkout validation"
when
$l: OleLoanDocument()

$n: NoticeInfo()

$d : DroolsResponse()

$i: OleItemRecordForCirc(getItemType() in ("03"))
then
$l.setCirculationPolicyId("CHECKOUT_NONCIRC_03");
$d.addErrorMessage("This item does not circulate.");
$d.addOverridePermissions("Item does not circulate");
//$l.loanPeriod("84-D",null); // This method takes due date and recall period as arguments.
//$n.setNoticeType(DroolsConstants.SHORT_TERM_LOANS_NOTICE_CONFIG);
 end
 
rule "CHECKOUT_FAC_STAFF_65"
agenda-group "checkout validation"
activation-group "checkout validation"
when
$l: OleLoanDocument()

$n: NoticeInfo()

$d : DroolsResponse()

$i: OleItemRecordForCirc(getItemType() in ("65"))

$p: OlePatronDocument(getBorrowerTypeCode() in ("FAC", "STAFF"))
then
$l.setCirculationPolicyId("CHECKOUT_FAC_STAFF_65");
$d.addErrorMessage("This patron type is not allowed to checkout items of this type.");
$d.addOverridePermissions("Patron type not allowed to borrow item type");
//$l.loanPeriod("84-D",null); // This method takes due date and recall period as arguments.
//$n.setNoticeType(DroolsConstants.SHORT_TERM_LOANS_NOTICE_CONFIG);
 end
 
rule "CHECKOUT_UGRAD_GRAD_65"
agenda-group "checkout validation"
activation-group "checkout validation"
when
$l: OleLoanDocument()

$n: NoticeInfo()

$d : DroolsResponse()

$i: OleItemRecordForCirc(getItemType() in ("65"))

$p: OlePatronDocument(getBorrowerTypeCode() in ("UGRAD", "GRAD"))
then
$l.setCirculationPolicyId("CHECKOUT_UGRAD_GRAD_65");
$l.loanPeriod("8-H",null); // This method takes due date and recall period as arguments.
$n.setNoticeType(DroolsConstants.SHORT_TERM_LOANS_NOTICE_CONFIG);
 end
 